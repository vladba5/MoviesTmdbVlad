import org.jetbrains.kotlin.gradle.tasks.KotlinCompile
import tmdb.buildSrc.Libs

buildscript {
    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
    }
    dependencies {
        classpath Libs.androidGradlePlugin
        classpath Libs.Kotlin.gradlePlugin
        classpath Libs.Hilt.gradlePlugin
        classpath Libs.FireBase.googleServicesPlugin
    }
}

plugins {
    id 'com.diffplug.spotless' version '6.3.0'
}

subprojects {
    repositories {
        google()
        mavenCentral()
    }

    tasks.withType(KotlinCompile).configureEach {
        kotlinOptions {
            // Treat all Kotlin warnings as errors (disabled by default)
            allWarningsAsErrors = project.hasProperty("warningsAsErrors") ? project.warningsAsErrors : false

            freeCompilerArgs += '-opt-in=kotlin.RequiresOptIn'
            // Enable experimental coroutines APIs, including Flow
            freeCompilerArgs += '-opt-in=kotlin.Experimental'

            // Set JVM target to 1.8
            jvmTarget = "11"
        }
    }

    apply plugin: 'com.diffplug.spotless'
    spotless {
        kotlin {
            target '**/*.kt'
            targetExclude("$buildDir/**/*.kt")
            targetExclude('bin/**/*.kt')

            licenseHeaderFile rootProject.file('spotless/copyright.kt')
        }
    }
}
task clean(type: Delete) {
    delete rootProject.buildDir
}